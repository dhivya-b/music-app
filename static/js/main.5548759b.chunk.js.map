{"version":3,"sources":["Common/AlbumsList.js","Common/SongsList.js","Home/Home.js","Common/SearchBar.js","Search/Search.js","Common/Modal.js","Common/Utils.js","Playlist/Playlist.js","Sidebar/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["AlbumsList","albums","songs","className","map","album","index","image","find","song","albumId","id","style","backgroundImage","url","src","alt","title","SongsList","addtoPlaylist","thumbnailUrl","onClick","Home","this","props","length","slice","React","Component","SearchBar","clearSearch","searchText","handleChange","placeholder","onChange","value","type","Search","state","handleOnChange","evt","target","setState","songsList","filter","x","indexOf","Modal","playlistName","name","description","save","onSave","onNameChange","onDescriptionChange","onClose","shuffleArray","array","i","j","Math","floor","random","temp","Playlist","playLists","showModal","showSongsList","searchSongs","songsPlayList","playlistId","openPlayList","currentPlaylist","findIndex","closePlayList","toggleSongsList","closeModal","songDetail","push","saveLocalStorage","clearAllPlaylists","playList","localStorage","setItem","JSON","stringify","shuffleSongs","currentSongsList","shuffledArray","savePlaylist","currentPlaylists","uuidv4","ListComponenet","selectedPlayList","aria-hidden","parse","getItem","item","imageURL","Sidebar","location","useLocation","to","pathname","App","fetching","error","fetch","then","response","json","result","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5548759b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Common.scss\";\r\n\r\nconst AlbumsList = ({ albums, songs }) => {\r\n  return (\r\n    <div className=\"albums-list card-container\">\r\n      {albums.map((album, index) => {\r\n        const image = songs.find((song) => song.albumId === album.id);\r\n        return (\r\n          <div className=\"album-card\" style={{ backgroundImage: image.url }}>\r\n            <img src={image.url} alt={`${index}-songs`} />\r\n            <p className=\"title\">{album.title}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumsList;\r\n","import { findAllByTitle } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport \"./Common.scss\";\r\n\r\nconst SongsList = ({ songs, addtoPlaylist }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      {songs.map((song) => {\r\n        return (\r\n          <div className=\"song-card\">\r\n            <div className=\"flex-container justify-content-center align-items-center\">\r\n              <div>\r\n                <img src={song.thumbnailUrl} alt=\"song\" />\r\n              </div>\r\n              <span className=\"title\">{song.title}</span>\r\n            </div>\r\n            {addtoPlaylist && (\r\n              <p className=\"cursor-pointer\" onClick={() => addtoPlaylist(song)}>\r\n                Add to playlist\r\n              </p>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongsList;\r\n","import React from \"react\";\r\nimport AlbumsList from \"./../Common/AlbumsList\";\r\nimport SongsList from \"./../Common/SongsList\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <h2>Most Popular albums</h2>\r\n        {this.props.albums.length > 0 ? (\r\n          <AlbumsList\r\n            albums={this.props.albums.slice(0, 5)}\r\n            songs={this.props.songs}\r\n          />\r\n        ) : (\r\n          <p>No albums available</p>\r\n        )}\r\n        <h2>All Songs</h2>\r\n        {this.props.songs.length > 0 ? (\r\n          <SongsList songs={this.props.songs} />\r\n        ) : (\r\n          <p>No songs available</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Common.scss\";\r\n\r\nconst SearchBar = ({ clearSearch, searchText, handleChange }) => {\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <i className=\"fa fa-search\"></i>\r\n      <input\r\n        placeholder=\"Search your favourite songs or albums\"\r\n        onChange={handleChange}\r\n        value={searchText}\r\n        type=\"text\"\r\n      ></input>\r\n      {searchText.length > 0 && (\r\n        <i onClick={clearSearch} className=\"fa fa-close cursor-pointer\"></i>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./Search.scss\";\r\nimport SearchBar from \"../Common/SearchBar\";\r\nimport SongsList from \"./../Common/SongsList\";\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    songs: [],\r\n  };\r\n\r\n  handleOnChange = (evt) => {\r\n    const searchText = evt.target.value;\r\n    this.setState({ searchText: searchText });\r\n    const songsList = this.props.songs.filter(\r\n      (x) => x.title.indexOf(searchText) !== -1\r\n    );\r\n    this.setState({ songs: songsList });\r\n  };\r\n\r\n  clearSearch = () => {\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <SearchBar\r\n          handleChange={this.handleOnChange}\r\n          searchText={this.state.searchText}\r\n          clearSearch={this.clearSearch}\r\n        />\r\n        {this.state.searchText.length > 0 && (\r\n          <div>\r\n            {this.state.songs.length > 0 ? (\r\n              <div>\r\n                <h2>Top results</h2>\r\n                <SongsList songs={this.state.songs} />\r\n              </div>\r\n            ) : (\r\n              <p>No results founds</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nclass Modal extends React.Component {\r\n  state = {\r\n    playlistName: this.props.name,\r\n    description: \"\",\r\n  };\r\n\r\n  save = () => {\r\n    this.props.onSave(this.state.playlistName, this.state.description);\r\n  };\r\n\r\n  onNameChange = (evt) => {\r\n    this.setState({ playlistName: evt.target.value });\r\n  };\r\n\r\n  onDescriptionChange = (evt) => {\r\n    this.setState({ description: evt.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-wrapper\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <p>Create Playlist</p>\r\n            <p className=\"cursor-pointer\" onClick={this.props.onClose}>\r\n              x\r\n            </p>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"decoration-container\">\r\n              <i className=\"fa fa-music\"></i>\r\n            </div>\r\n            <div>\r\n              <input\r\n                onChange={this.onNameChange}\r\n                value={this.state.playlistName}\r\n                className=\"input-fileds\"\r\n              ></input>\r\n              <textarea\r\n                onChange={this.onDescriptionChange}\r\n                value={this.state.description}\r\n                placeholder=\"Add description\"\r\n                className=\"input-fileds\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              className={`${\r\n                this.state.playlistName.length === 0 ? \"disabled\" : null\r\n              }`}\r\n              onClick={this.save}\r\n            >\r\n              SAVE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","const shuffleArray = (array) => {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n};\r\n\r\nexport { shuffleArray };\r\n","import React from \"react\";\r\nimport Modal from \"../Common/Modal\";\r\nimport SongsList from \"./../Common/SongsList\";\r\nimport SearchBar from \"../Common/SearchBar\";\r\nimport { shuffleArray } from \"../Common/Utils\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./Playlist.scss\";\r\n\r\nclass Playlist extends React.Component {\r\n  state = {\r\n    playLists: [],\r\n    searchText: \"\",\r\n    showModal: false,\r\n    showSongsList: false,\r\n    searchSongs: [],\r\n    songsPlayList: [],\r\n  };\r\n\r\n  playlistId = null;\r\n\r\n  componentDidMount() {\r\n    const playLists = JSON.parse(localStorage.getItem(\"playlists\"));\r\n    if (playLists && playLists.length > 0) {\r\n      this.setState({ playLists: playLists });\r\n    }\r\n  }\r\n\r\n  openPlayList = (id) => {\r\n    this.playlistId = id;\r\n    const currentPlaylist = [...this.state.playLists];\r\n    const index = currentPlaylist.findIndex((x) => x.id === id);\r\n    if (index !== -1) {\r\n      this.setState({ songsPlayList: currentPlaylist[index].songs });\r\n    }\r\n    this.setState({ showSongsList: true });\r\n  };\r\n\r\n  closePlayList = () => {\r\n    this.playlistId = null;\r\n    this.setState({ showSongsList: false });\r\n  };\r\n\r\n  toggleSongsList = () => {\r\n    this.setState((state) => {\r\n      this.setState(!state.showSongsList);\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  addtoPlaylist = (songDetail) => {\r\n    if (songDetail) {\r\n      const currentPlaylist = [...this.state.playLists];\r\n      const index = currentPlaylist.findIndex((x) => x.id === this.playlistId);\r\n      if (index !== -1) {\r\n        currentPlaylist[index].songs.push(songDetail);\r\n        this.setState({\r\n          playLists: currentPlaylist,\r\n          songsPlayList: currentPlaylist[index].songs,\r\n        });\r\n        this.saveLocalStorage(currentPlaylist);\r\n      }\r\n    }\r\n  };\r\n\r\n  clearAllPlaylists = () => {\r\n    this.setState({ playLists: [] });\r\n    this.saveLocalStorage([]);\r\n  };\r\n\r\n  saveLocalStorage = (playList) => {\r\n    localStorage.setItem(\"playlists\", JSON.stringify(playList));\r\n  };\r\n\r\n  handleOnChange = (evt) => {\r\n    const searchText = evt.target.value;\r\n    this.setState({ searchText: searchText });\r\n    const songsList = this.props.songs.filter(\r\n      (x) => x.title.indexOf(searchText) !== -1\r\n    );\r\n    this.setState({ searchSongs: songsList });\r\n  };\r\n\r\n  clearSearch = () => {\r\n    this.setState({ searchText: \"\", searchSongs: [] });\r\n  };\r\n\r\n  shuffleSongs = () => {\r\n    const currentSongsList = [...this.state.songsPlayList];\r\n    if (currentSongsList.length > 0) {\r\n      const shuffledArray = shuffleArray(currentSongsList);\r\n      this.setState({ songsPlayList: shuffledArray });\r\n    }\r\n  };\r\n\r\n  savePlaylist = (name, description) => {\r\n    const currentPlaylists = this.state.playLists;\r\n    currentPlaylists.push({\r\n      id: uuidv4(),\r\n      name: name,\r\n      description: description,\r\n      songs: [],\r\n    });\r\n    this.setState({ playLists: currentPlaylists, showModal: false });\r\n    this.saveLocalStorage(currentPlaylists);\r\n  };\r\n\r\n  ListComponenet = ({ selectedPlayList }) => {\r\n    return (\r\n      <div className=\"songs-list\">\r\n        <span className=\"cursor-pointer\" onClick={this.closePlayList}>\r\n          <i className=\"fa fa-arrow-left\"></i> Back to playlist\r\n        </span>\r\n        <h2>{selectedPlayList.name}</h2>\r\n        <SearchBar\r\n          handleChange={this.handleOnChange}\r\n          searchText={this.state.searchText}\r\n          clearSearch={this.clearSearch}\r\n        />\r\n        <p>Search a song you want to add to this playlist.</p>\r\n        <div className=\"search-area\">\r\n          <SongsList\r\n            songs={this.state.searchSongs}\r\n            addtoPlaylist={this.addtoPlaylist}\r\n          />\r\n        </div>\r\n        <div className=\"shuffle-text\">\r\n          <h2>Songs in playlist</h2>\r\n          <i\r\n            onClick={this.shuffleSongs}\r\n            className=\"fa fa-random cursor-pointer\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <span>Shuffle Songs</span>\r\n          </i>\r\n        </div>\r\n\r\n        {selectedPlayList.songs.length > 0 ? (\r\n          <SongsList songs={this.state.songsPlayList} />\r\n        ) : (\r\n          <p>No songs in this playlist</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const currentPlaylists = this.state.playLists;\r\n    const selectedPlayList = currentPlaylists.find(\r\n      (x) => x.id === this.playlistId\r\n    );\r\n    return (\r\n      <>\r\n        {this.state.showModal && (\r\n          <Modal\r\n            name={`My Playlist#${this.state.playLists.length + 1}`}\r\n            onClose={this.closeModal}\r\n            onSave={this.savePlaylist}\r\n          ></Modal>\r\n        )}\r\n        {this.state.showSongsList ? (\r\n          <this.ListComponenet selectedPlayList={selectedPlayList} />\r\n        ) : (\r\n          <div className=\"playlist\">\r\n            <h1>Your Playlists</h1>\r\n            {this.state.playLists.length === 0 ? (\r\n              <p>\r\n                You don't have any playlist now, click below button to create\r\n                one\r\n              </p>\r\n            ) : (\r\n              <div className=\"card-container\">\r\n                {this.state.playLists?.map((item) => {\r\n                  let imageURL = null;\r\n                  if (item.songs.length > 0) {\r\n                    imageURL = item.songs[0].url;\r\n                  }\r\n                  return (\r\n                    <div\r\n                      onClick={() => this.openPlayList(item.id)}\r\n                      className=\"album-card\"\r\n                    >\r\n                      {imageURL === null ? (\r\n                        <p>No songs Added</p>\r\n                      ) : (\r\n                        <img src={imageURL} alt=\"playlist\" />\r\n                      )}\r\n                      <p>{item.name}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n            <button onClick={() => this.setState({ showModal: true })}>\r\n              Create Playlist\r\n            </button>\r\n            {this.state.playLists.length > 0 && (\r\n              <button onClick={this.clearAllPlaylists}>Clear All</button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Playlist;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Sidebar.scss\";\r\n\r\nconst Sidebar = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-desktop\">\r\n        <div className=\"flex-container align-items-center\">\r\n          <img className=\"logo-image\" alt=\"logo\" src=\"/music-logo.svg\" />\r\n          <span className=\"company-title\">VBI Music</span>\r\n        </div>\r\n        <ul className=\"nav-links\">\r\n          <Link to=\"/\">\r\n            <li className={`${location.pathname === \"/\" ? \"active\" : null}`}>\r\n              <i className=\"fa fa-home\"></i>Home\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/search\">\r\n            <li\r\n              className={`${location.pathname === \"/search\" ? \"active\" : null}`}\r\n            >\r\n              <i className=\"fa fa-search\"></i>Search\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/playlist\">\r\n            <li\r\n              className={`${\r\n                location.pathname === \"/playlist\" ? \"active\" : null\r\n              }`}\r\n            >\r\n              <i className=\"fa fa-music\"></i>Playlists\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n      </div>\r\n      <div className=\"sidebar-mobile\">\r\n        <div className=\"flex-container align-items-center\">\r\n          <img className=\"logo-image\" alt=\"logo\" src=\"/music-logo.svg\" />\r\n        </div>\r\n        <ul className=\"nav-links\">\r\n          <Link to=\"/\">\r\n            <li className={`${location.pathname === \"/\" ? \"active\" : null}`}>\r\n              <i className=\"fa fa-home\"></i>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/search\">\r\n            <li\r\n              className={`${location.pathname === \"/search\" ? \"active\" : null}`}\r\n            >\r\n              <i className=\"fa fa-search\"></i>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/playlist\">\r\n            <li\r\n              className={`${\r\n                location.pathname === \"/playlist\" ? \"active\" : null\r\n              }`}\r\n            >\r\n              <i className=\"fa fa-music\"></i>\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home/Home\";\nimport Search from \"./Search/Search\";\nimport Playlist from \"./Playlist/Playlist\";\nimport Sidebar from \"./Sidebar/Sidebar\";\n\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  state = {\n    songs: [],\n    albums: [],\n    fetching: false,\n    error: false,\n  };\n\n  componentDidMount() {\n    try {\n      this.setState({ fetching: true });\n      fetch(\"https://jsonplaceholder.typicode.com/albums\")\n        .then((response) => response.json())\n        .then((result) => {\n          const albums = result;\n          this.setState({ albums: albums });\n        });\n      fetch(\"https://jsonplaceholder.typicode.com/photos\")\n        .then((response) => response.json())\n        .then((result) => {\n          const songs = result;\n          this.setState({ songs: songs });\n        });\n    } catch (error) {\n      this.setState({ error: true });\n    } finally {\n      this.setState({ fetching: false });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.fetching ? (\n          <p>Fetching songs and albums for you...!!</p>\n        ) : this.state.error ? (\n          <p>OOPS...Something went wrong..!!</p>\n        ) : (\n          this.state.songs.length > 0 &&\n          this.state.albums.length > 0 && (\n            <>\n              <Sidebar />\n              <div className=\"router-content\">\n                <Switch>\n                  <Route\n                    path=\"/\"\n                    exact\n                    component={() => (\n                      <Home\n                        songs={this.state.songs}\n                        albums={this.state.albums}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/search\"\n                    exact\n                    component={() => (\n                      <Search\n                        songs={this.state.songs}\n                        albums={this.state.albums}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/playlist\"\n                    component={() => (\n                      <Playlist\n                        songs={this.state.songs}\n                        albums={this.state.albums}\n                      />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </>\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}